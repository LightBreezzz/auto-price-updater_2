import pandas as pd
import requests
from pathlib import Path

# === –ü–ê–†–ê–ú–ï–¢–†–´ ===
URL_FILE = "https://i.euro-diski.ru/url/diski/"  # ‚Üê –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞
OUTPUT_FILE = "Diski.xlsx"          # ‚Üê –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

# === –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª ===
print("üì• –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª...")
response = requests.get(URL_FILE)
with open("temp_file.xlsx", "wb") as f:
    f.write(response.content)

# === –ß–∏—Ç–∞–µ–º Excel ===
print("üìÅ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª...")
df_full = pd.read_excel("temp_file.xlsx", header=None)

# –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏ 4 (–∏–Ω–¥–µ–∫—Å 3)
headers = df_full.iloc[3].tolist()
print("üìã –ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤:")
print(headers)

# –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ (—Å 6 —Å—Ç—Ä–æ–∫–∏, –∏–Ω–¥–µ–∫—Å 5)
df = df_full.iloc[5:].copy()

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
df.columns = headers

# # üîç –í–†–ï–ú–ï–ù–ù–û: –≤—ã–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤
# print("üìã –ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ —Ñ–∞–π–ª–µ:")
# print(df.columns.tolist())

# === –£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã ===
columns_to_drop = ["–ú–µ–ª–∫–∏–π–û–ø—Ç", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Å–∫–ª–∞–¥"]
df = df.drop(columns=columns_to_drop, errors='ignore')

# === –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—É—Å—Ç—ã–º–∏ –æ–ø—Ç–æ–≤—ã–º–∏ —Ü–µ–Ω–∞–º–∏ ===
df = df.dropna(subset=["–û–ø—Ç–æ–≤–∞—è"])

# === –ó–∞–ø–æ–ª–Ω—è–µ–º –ü–£–°–¢–´–ï —Ä–æ–∑–Ω–∏—á–Ω—ã–µ —Ü–µ–Ω—ã –∫–∞–∫ –û–ø—Ç–æ–≤–∞—è √ó 1.2 ===
df["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] = df.apply(
    lambda row: row["–û–ø—Ç–æ–≤–∞—è"] * 1.2 if pd.isna(row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"]) else row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"],
    axis=1
)

# === –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ü–µ–Ω—ã –∏ –æ—Å—Ç–∞—Ç–æ–∫ –≤ —á–∏—Å–ª–∞ ===
df["–û–ø—Ç–æ–≤–∞—è"] = pd.to_numeric(df["–û–ø—Ç–æ–≤–∞—è"], errors='coerce')
df["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] = pd.to_numeric(df["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"], errors='coerce')
df["–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫"] = df["–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫"].replace("–±–æ–ª—å—à–µ 40", 40)  # –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 40
df["–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫"] = df["–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫"].replace("–±–æ–ª—å—à–µ 40", 40)  # –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ
df["–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫"] = pd.to_numeric(df["–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫"], errors='coerce')

# === –®–∞–≥ 1: –ï—Å–ª–∏ —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞ <= –æ–ø—Ç–æ–≤–æ–π –ò–õ–ò —Ä–∞–∑–Ω–∏—Ü–∞ < 500 ‚Äî –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –æ–ø—Ç–æ–≤—É—é √ó 1.2 ===
df["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] = df.apply(
    lambda row: row["–û–ø—Ç–æ–≤–∞—è"] * 1.2 if (row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] <= row["–û–ø—Ç–æ–≤–∞—è"]) or (abs(row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] - row["–û–ø—Ç–æ–≤–∞—è"]) < 500) else row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"],
    axis=1
)

# === –®–∞–≥ 2: –†–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞ -2% (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ > 6000) ===
df["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] = df.apply(
    lambda row: row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] * 0.98 if row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] > 6000 else row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"],
    axis=1
)

# === –®–∞–≥ 3: –ï—Å–ª–∏ –æ—Å—Ç–∞—Ç–æ–∫ <= 3 ‚Üí +30% –∫ —Ä–æ–∑–Ω–∏—á–Ω–æ–π —Ü–µ–Ω–µ ===
df["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] = df.apply(
    lambda row: row["–û–ø—Ç–æ–≤–∞—è"] * 1.3 if row["–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫"] <= 3 else row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"],
    axis=1
)

# === –®–∞–≥ 4: –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É ===
df["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] = df.apply(
    lambda row: row["–û–ø—Ç–æ–≤–∞—è"] + 500 if (row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] <= row["–û–ø—Ç–æ–≤–∞—è"]) or (abs(row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] - row["–û–ø—Ç–æ–≤–∞—è"]) < 500) else row["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"],
    axis=1
)

# === –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–æ–∑–Ω–∏—á–Ω—É—é —Ü–µ–Ω—É –∫–∞–∫ —á–∏—Å–ª–æ (—É–±–∏—Ä–∞–µ–º —Ñ–æ—Ä–º—É–ª—ã) ===
df["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"] = df["–õ—É—á—à–∞—è —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞"].round(0).astype(int)

# === –£–¥–∞–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü "–û–ø—Ç–æ–≤–∞—è" ===
df = df.drop(columns=["–û–ø—Ç–æ–≤–∞—è"])

# === –£–¥–∞–ª—è–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç–æ–ª–±—Ü—ã (—Ç–æ–ª—å–∫–æ —Ç–µ, –≥–¥–µ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è NaN) ===
df = df.dropna(axis=1, how='all')

# === –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç ===
df.to_excel(OUTPUT_FILE, index=False)
print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {OUTPUT_FILE}")

# === –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ===
Path("temp_file.xlsx").unlink()